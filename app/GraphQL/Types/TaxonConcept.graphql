type TaxonConcept {
    id: ID! @rename(attribute: "guid")
    remarks: String
    editorNotes: String @rename(attribute: "editor_notes")

    taxonName: TaxonName!
    accordingTo: Reference
    acceptedConcept: TaxonConcept
    parent: TaxonConcept
    taxonRank: TaxonRankEnum
    taxonTreeDefItem: TaxonTreeDefItem
    taxonTreeItem: TaxonTreeItem
    taxonomicStatus: TaxonomicStatusEnum
        @rename(attribute: "taxonomicStatusName")
    occurrenceStatus: OccurrenceStatusEnum
        @rename(attribute: "occurrenceStatusName")
    establishmentMeans: EstablishmentMeansEnum
        @rename(attribute: "establishmentMeansName")
    degreeOfEstablishment: DegreeOfEstablishment

    children: [TaxonConcept]
    siblings: [TaxonConcept]
    higherClassification: [TaxonTreeItem]
    taxonAttributes: [TaxonAttribute]
    vernacularNames: [VernacularName]
    preferredVernacularName: VernacularName
    profiles: [Profile]
    profilesAccepted: [Profile]
    currentProfile: Profile
    heroImage: Image
    hasImages: Boolean
    images: [Image]
        @paginate(
            builder: "\\App\\GraphQL\\Queries\\TaxonConceptImages"
            defaultCount: 20
        )
    hasSpecimenImages: Boolean
    specimenImages: [SpecimenImage]
        @paginate(
            builder: "\\App\\GraphQL\\Queries\\TaxonConceptSpecimenImages"
            defaultCount: 20
        )

    bioregions: [TaxonBioregion]
    localGovernmentAreas: [TaxonLocalGovernmentArea]
    parkReserves: [TaxonParkReserve]

    occurrences(source: String @eq(key: "data_source")): [OccurrenceFeature]
        @paginate(
            type: PAGINATOR
            defaultCount: 20
            builder: "\\App\\GraphQL\\Queries\\TaxonConceptOccurrences"
        )
    avhOccurrences: [OccurrenceFeature]
        @paginate(
            type: PAGINATOR
            defaultCount: 20
            builder: "\\App\\GraphQL\\Queries\\TaxonConceptAvhOccurrences"
        )
    vbaOccurrences: [OccurrenceFeature]
        @paginate(
            type: PAGINATOR
            defaultCount: 20
            builder: "\\App\\GraphQL\\Queries\\TaxonConceptVbaOccurrences"
        )

    mapLinks: MapLinks
        @field(resolver: "\\App\\GraphQL\\Queries\\TaxonConceptMapLinks")
    identificationKeys: [IdentificationKey!]!
        @field(resolver: "\\App\\GraphQL\\Queries\\TaxonConceptKeys")

    synonyms: [TaxonName]
    """
    This has been added, because currently the VicFlora system requires synonyms
    to be provided as usages (concepts). Once VicFlora is set up for concept
    alignments, we might not be able to provide synonyms this way anymore.
    """
    synonymUsages: [TaxonConcept]
    misapplications: [TaxonConcept]

    createdBy: Agent
    modifiedBy: Agent
    createdAt: DateTimeTz @rename(attribute: "created_at")
    updatedAt: DateTimeTz @rename(attribute: "updated_at")
    version: Int
}

type MapLinks {
    profileMap: String
    distributionMap: String
    mapSource: String
}

type IdentificationKey {
    id: ID! @rename(attribute: "key_id")
    title: String! @rename(attribute: "key_title")
    taxonomicScope: String @rename(attribute: "taxonomic_scope")
    geographicScope: String @rename(attribute: "geographic_scope")
}

extend type Query {
    taxonConcept(id: ID! @eq(key: "guid")): TaxonConcept @find

    taxonConceptsByWkt(wkt: String!): [TaxonConcept]!
        @paginate(
            type: PAGINATOR
            defaultCount: 20
            builder: "\\App\\GraphQL\\Queries\\TaxonConceptsByWkt"
        )

    taxonConceptImages(taxonConceptId: ID!): [Image]
        @paginate(
            builder: "\\App\\GraphQL\\Queries\\TaxonConceptImages"
            defaultCount: 20
        )

    taxonConceptSpecimenImages(taxonConceptId: ID!): [SpecimenImage]
        @paginate(
            builder: "\\App\\GraphQL\\Queries\\TaxonConceptSpecimenImages"
            defaultCount: 20
        )
}
