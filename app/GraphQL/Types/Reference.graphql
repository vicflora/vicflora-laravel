type Reference {
    id: ID! @rename(attribute: "guid")
    quickRef: String 
        @field(resolver: "\\App\\GraphQL\\Queries\\ReferenceQuickRef")
    author: Agent
    referenceType: ReferenceTypeEnum @rename(attribute: "referenceTypeName")
    publicationYear: String @rename(attribute: "publication_year")
    title: String!
    shortTitle: String @rename(attribute: "short_title")
    edition: String
    volume: String
    issue: String
    pageStart: Int @rename(attribute: "page_start")
    pageEnd: Int @rename(attribute: "page_end")
    pages: String
    numberOfPages: String @rename(attribute: "number_of_pages")
    publisher: String
    placeOfPublication: String @rename(attribute: "place_of_publication")
    shortDescription: String @rename(attribute: "short_description")
    abstract: String
    isbn: String
    issn: String
    doi: String

    parent: Reference
    isPartOf: Reference @rename(attribute: "parent")
    journal: Reference
    book: Reference
    contributors: [Contributor]

    """
    Reference as an unformatted string
    (deprecated; use `referenceString` instead)
    """
    citation: String 
        @field(resolver: "\\App\\GraphQL\\Queries\\ReferenceString")

    """
    Reference as an unformatted string
    """
    referenceString: String 
        @field(resolver: "\\App\\GraphQL\\Queries\\ReferenceString")

    """
    Reference in HTML format
    (deprecated; use `referenceStringHtml` instead)
    """
    citationHtml: String
        @field(resolver: "\\App\\GraphQL\\Queries\\ReferenceStringHtml")

    """
    Reference in HTML format
    """
    referenceStringHtml: String
        @field(resolver: "\\App\\GraphQL\\Queries\\ReferenceStringHtml")

    """
    Reference in Markdown format
    (deprecated; use `referenceStringMarkdown` instead)
    """
    citationMarkdown: String
        @field(resolver: "\\App\\GraphQL\\Queries\\ReferenceStringMarkdown")

    """
    Reference in Markdown format
    """
    referenceStringMarkdown: String
        @field(resolver: "\\App\\GraphQL\\Queries\\ReferenceStringMarkdown")

    """
    Taxon Names for which this Reference is the protologue
    """
    taxonNames: [TaxonName]

    """
    Taxon Concepts where this Reference is cited. **Note:** We have a Taxon 
    Concept Reference type rather than a simple association to resolve the 
    many-to-many relationship between Taxon Concept and Reference. At the moment 
    it does not have any data properties, but we have the option to add them 
    later.
    """
    taxonConcepts: [TaxonConceptReference] 
        @rename(attribute: "taxonConceptReferences")
}

input UpdateReferenceInput {
    id: ID! @rename(attribute: "guid")
    author: AgentBelongsTo
    publicationYear: String @rename(attribute: "publication_year")
    title: String!
    shortTitle: String @rename(attribute: "short_title")
    journal: ReferenceBelongsTo
    book: ReferenceBelongsTo
    edition: String
    volume: String
    issue: String
    pageStart: Int @rename(attribute: "page_start")
    pageEnd: Int @rename(attribute: "page_end")
    pages: String
    numberOfPages: String @rename(attribute: "number_of_pages")
    publisher: String
    placeOfPublication: String @rename(attribute: "place_of_publication")
    shortDescription: String @rename(attribute: "short_description")
    abstract: String
    isbn: String
    issn: String
    doi: String
    referenceType: ReferenceTypeEnum
    parent: ReferenceBelongsTo
}

input CreateReferenceInput {
    author: AgentBelongsTo
    publicationYear: String @rename(attribute: "publication_year")
    title: String!
    shortTitle: String @rename(attribute: "short_title")
    journal: ReferenceBelongsTo
    book: ReferenceBelongsTo
    edition: String
    volume: String
    issue: String
    pageStart: Int @rename(attribute: "page_start")
    pageEnd: Int @rename(attribute: "page_end")
    pages: String
    numberOfPages: String @rename(attribute: "number_of_pages")
    publisher: String
    placeOfPublication: String @rename(attribute: "place_of_publication")
    shortDescription: String @rename(attribute: "short_description")
    abstract: String
    isbn: String
    issn: String
    doi: String
    referenceType: ReferenceTypeEnum
    parent: ReferenceBelongsTo
}

input ReferenceBelongsTo {
    connect: ID
}

input CreateTaxonConceptReferenceInput {
    taxonConcept: TaxonConceptBelongsTo!
    reference: ReferenceBelongsTo!
}

extend type Query {
    reference(id: ID! @eq(key: "guid")): Reference @find
    referenceAutocomplete(q: String!): [Reference]
        @field(resolver: "\\App\\GraphQL\\Queries\\ReferenceAutocomplete")
    journalAutocomplete(q: String!): [Reference]
        @field(resolver: "\\App\\GraphQL\\Queries\\JournalAutocomplete")
}

extend type Mutation {
    updateReference(input: UpdateReferenceInput!): Reference
        @guard(with: ["api"])
        @field(resolver: "\\App\\GraphQL\\Mutations\\UpdateReference")

    createReference(input: CreateReferenceInput!): Reference
        @guard(with: ["api"])
        @field(resolver: "\\App\\GraphQL\\Mutations\\CreateReference")

    deleteReference(id: ID!): Reference
        @guard(with: ["api"])
        @field(resolver: "\\App\\GraphQL\\Mutations\\DeleteReference")

    createTaxonConceptReference(input: CreateTaxonConceptReferenceInput!): TaxonConceptReference
        @guard(with: ["api"])
        @field(resolver: "\\App\\GraphQL\\Mutations\\CreateTaxonConceptReference")

    deleteTaxonConceptReference(id: ID!): TaxonConceptReference
        @guard(with: ["api"])
        @field(resolver: "\\App\\GraphQL\\Mutations\\DeleteTaxonConceptReference")
}
