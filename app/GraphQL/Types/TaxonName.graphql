type TaxonName {
    id: ID! @rename(attribute: "guid")
    namePart: String @rename(attribute: "name_part")
    fullName: String! @rename(attribute: "full_name")
    authorship: String
    fullNameWithAuthorship: String
        @rename(attribute: "full_name_with_authorship")
    nomenclaturalNote: String @rename(attribute: "nomenclatural_note")
    remarks: String

    nameType: NameTypeEnum @rename(attribute: "nameTypeName")
    # nomenclaturalStatus: NomenclaturalStatus
    basionym: TaxonName
    replacedSynonym: TaxonName
    protologue: Reference

    taxonConcepts: [TaxonConcept]

    "Link to name record in APNI"
    apniName: ApniName

    "Link to taxon record in VBA"
    vbaTaxon: VbaTaxon

    createdBy: Agent
    modifiedBy: Agent
    createdAt: DateTimeTz @rename(attribute: "created_at")
    updatedAt: DateTimeTz @rename(attribute: "updated_at")
    version: Int
}

input UpdateTaxonNameInput {
    id: ID! @rename(attribute: "guid")
    namePart: String @rename(attribute: "name_part")
    fullName: String @rename(attribute: "full_name")
    nameType: NameTypeEnum @rename(attribute: "nameTypeName")
    authorship: String
    nomenclaturalNote: String @rename(attribute: "nomenclatural_note")
    remarks: String
    protologue: UpdateReferenceBelongsTo
}

input CreateTaxonNameInput {
    namePart: String @rename(attribute: "name_part")
    fullName: String @rename(attribute: "full_name")
    nameType: NameTypeEnum @rename(attribute: "nameTypeName")
    authorship: String
    nomenclaturalNote: String @rename(attribute: "nomenclatural_note")
    remarks: String
    protologue: CreateReferenceBelongsTo
}

input TaxonNameBelongsTo {
    connect: ID!
}

extend type Query {
    taxonName(id: ID! @eq(key: "guid")): TaxonName @find
    taxonNameAutocomplete(q: String! @ilike(key: "full_name")): [TaxonName] @all
}

extend type Mutation {
    updateTaxonName(input: UpdateTaxonNameInput!): TaxonName 
        @guard(with: ["api"])
        @field(resolver: "\\App\\GraphQL\\Mutations\\UpdateTaxonName")
    
    createTaxonName(input: CreateTaxonNameInput!): TaxonName
        @guard(with: ["api"])
        @field(resolver: "\\App\\GraphQL\\Mutations\\CreateTaxonName")
}
