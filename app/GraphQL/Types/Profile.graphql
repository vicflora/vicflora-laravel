type Profile {
    id: ID! @rename(attribute: "uniqId")
    guid: UUID
    profile: String!

    taxonConcept: TaxonConcept
    acceptedConcept: TaxonConcept
    source: Reference
    # taxonomicStatus: TaxonomicStatusEnum
    #     @rename(attribute: "taxonomicStatusName")

    creator: Agent
    updatedBy: Agent
    created: Date
    modified: Date
    createdAt: DateTimeTz @rename(attribute: "created_at")
    updatedAt: DateTimeTz @rename(attribute: "updated_at")
    createdBy: Agent
    modifiedBy: Agent
    version: Int
}

input UpdateProfileInput {
    id: ID!
    profile: String!
}

input CreateProfileInput {
    id: ID
    profile: String!
    taxonConcept: TaxonConceptBelongsTo!
    acceptedConcept: TaxonConceptBelongsTo!
    source: CreateReferenceBelongsTo
}

extend type Mutation {
    updateProfile(input: UpdateProfileInput!): Profile
        @guard(with: ["api"])
        @field(resolver: "\\App\\GraphQL\\Mutations\\UpdateProfile")

    createProfile(input: CreateProfileInput!): Profile
        @guard(with: ["api"])
        @field(resolver: "\\App\\GraphQL\\Mutations\\CreateProfile")

    deleteProfile(id: ID!): Profile
        @guard(with: ["api"])
        @field(resolver: "\\App\\GraphQL\\Mutations\\DeleteProfile")
}
