type SearchResult {
    meta: SearchMetadata
    docs: [SearchResultDocument]
    facetFields: [SearchResultFacetField]
}

type Download {
    data: String
}

type SearchResultDocument {
    id: ID!
    taxonRank: String
    scientificNameId: String
    scientificName: String
    scientificNameAuthorship: String
    nameType: String
    namePublishedInId: String
    namePublishedIn: String
    namePublishedInYear: String
    nameAccordingTo: String
    kingdom: String
    phylum: String
    class: String
    order: String
    family: String
    genus: String
    specificEpithet: String
    infraspecificEpithet: String
    parentNameUsageId: String
    parentNameUsage: String
    acceptedNameUsageId: String
    acceptedNameUsage: String
    acceptedNameUsageAuthorship: String
    taxonomicStatus: String
    occurrenceStatus: [String]
    establishmentMeans: [String]
    threatStatus: [String]
    taxonRemarks: String
    vernacularName: [String]
    preferredVernacularName: String
    # ibra7Subregion: [String]
    # nrmRegion: [String]
    # epbc: String
    # vrot: String
    # ffg: String
}

type SearchResultFacetField {
    fieldName: String!
    fieldLabel: String
    facets: [SearchResultFacet!]!
}

type SearchResultFacet {
    value: String!
    count: Int!
    fq: String!
}

type SearchMetadata {
    params: SearchParameters
    query: String
    pagination: PaginatorInfo
}

type SearchParameters {
    q: String
    fq: [String]
    fl: [String]
    rows: Int
    page: Int
    start: Int
    facet: Boolean
    facetField: [String]
    facetSort: String
    facetLimit: Int
    facetOffset: Int
}

input SearchInput {
    q: String = "*:*"
    fq: [String]
    rows: Int = 20
    page: Int = 1
    sort: [String] = ["scientific_name asc"]
    facet: Boolean = true
    facetField: [String] = [
        "name_type"
        "taxonomic_status"
        "taxon_rank"
        "occurrence_status"
        "establishment_means"
        "threat_status"
        "class"
        "order"
        "family"
        "media"
    ]
    facetSort: String
    facetLimit: Int = 10
    facetOffset: Int = 0
}

input DownloadInput {
    q: String = "*:*"
    fq: [String]
    sort: [String] = ["scientific_name asc"]
    fl: [String] = [
        "id"
        "taxon_rank"
        "scientific_name"
        "scientific_name_authorship"
        "taxonomic_status"
        "family"
        "occurrence_status"
        "establishment_means"
        "accepted_name_usage_id"
        "accepted_name_usage"
        "accepted_name_usage_authorship"
        "accepted_name_usage_taxon_rank"
        "name_according_to"
        "sensu"
        "threat_status"
        "profile"
        "preferred_vernacular_name"
    ]
}

type IndexFields {
    name: String!
    type: String
    indexed: Boolean
    stored: Boolean
    required: Boolean
    multiValued: Boolean
}

input FieldFacetInput {
    field: String!
    q: String = "*:*"
    fq: [String]
    sort: String
    limit: Int = 100
    offset: Int = 0
}

extend type Query {
    search(input: SearchInput): SearchResult
    download(input: DownloadInput): Download
    facetField(input: FieldFacetInput): SearchResultFacetField
    indexFields: [IndexFields]
}
