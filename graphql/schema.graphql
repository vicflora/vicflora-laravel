#import ../app/GraphQL/Types/*.graphql
#import ../app/GraphQL/Inputs/*.graphql
#import ../app/GraphQL/Enums/*.graphql

type Query {
    users: [User!]! @guard(with: ["api"]) @paginate(defaultCount: 10)
    user(id: ID @eq): User @find
    authenticatedUser: User @guard(with: ["api"]) @auth

    highlights: [Highlight!]! @all
    carouselSlides: [CarouselSlide!]! @all

    nameTypeAhead(q: String): [String]
}

type Mutation {
    login(input: LoginInput @spread): AuthPayload! 
        @field(resolver: "Joselfonseca\\LighthouseGraphQLPassport\\GraphQL\\Mutations\\Login@resolve")
    
    refreshToken(input: RefreshTokenInput @spread): RefreshTokenPayload! 
        @field(resolver: "Joselfonseca\\LighthouseGraphQLPassport\\GraphQL\\Mutations\\RefreshToken@resolve")
    
    logout: LogoutResponse! 
        @field(resolver: "Joselfonseca\\LighthouseGraphQLPassport\\GraphQL\\Mutations\\Logout@resolve")
    
    register(input: RegisterInput @spread): RegisterResponse! 
        @guard(with: ["api"])
        @field(resolver: "Joselfonseca\\LighthouseGraphQLPassport\\GraphQL\\Mutations\\Register@resolve")

    updatePassword(input: UpdatePassword! @spread): UpdatePasswordResponse! 
        @guard(with: ["api"])
        @field(resolver: "Joselfonseca\\LighthouseGraphQLPassport\\GraphQL\\Mutations\\UpdatePassword@resolve") @guard(with: ["api"])
}
